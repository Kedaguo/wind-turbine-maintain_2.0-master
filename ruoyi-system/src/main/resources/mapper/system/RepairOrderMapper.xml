<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.RepairOrderMapper">
    
    <resultMap type="RepairOrder" id="RepairOrderResult">
        <result property="rId"    column="r_id"    />
        <result property="tId"    column="t_id"    />
        <result property="taskId"    column="task_id"    />
        <result property="userId"    column="user_id"    />
        <result property="rState"    column="r_state"    />
        <result property="rType"    column="r_type"    />
        <result property="rCreateTime"    column="r_create_time"    />
    </resultMap>

    <sql id="selectRepairOrderVo">
        select r_id, t_id, task_id, user_id, r_state, r_create_time from tl_repair_order
    </sql>

    <select id="selectRepairOrderList" parameterType="RepairOrder" resultMap="RepairOrderResult">
        <include refid="selectRepairOrderVo"/>
        <where>  
            <if test="tId != null "> and t_id = #{tId}</if>
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="rState != null "> and r_state = #{rState}</if>
            <if test="rType != null "> and r_type = #{rType}</if>
            <if test="rCreateTime != null "> and r_create_time = #{rCreateTime}</if>
        </where>
    </select>
    
    <select id="selectRepairOrderByRId" parameterType="Long" resultMap="RepairOrderResult">
        <include refid="selectRepairOrderVo"/>
        where r_id = #{rId}
    </select>
        
    <insert id="insertRepairOrder" parameterType="RepairOrder" useGeneratedKeys="true" keyProperty="rId">
        insert into tl_repair_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tId != null">t_id,</if>
            <if test="taskId != null">task_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="rState != null">r_state,</if>
            <if test="rType != null">r_type,</if>
            <if test="rCreateTime != null">r_create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tId != null">#{tId},</if>
            <if test="taskId != null">#{taskId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="rState != null">#{rState},</if>
            <if test="rType != null">#{rType},</if>
            <if test="rCreateTime != null">#{rCreateTime},</if>
         </trim>
    </insert>

    <update id="updateRepairOrder" parameterType="RepairOrder">
        update tl_repair_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="tId != null">t_id = #{tId},</if>
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="rState != null">r_state = #{rState},</if>
            <if test="rType != null">r_type = #{rType},</if>
            <if test="rCreateTime != null">r_create_time = #{rCreateTime},</if>
        </trim>
        where r_id = #{rId}
    </update>

    <delete id="deleteRepairOrderByRId" parameterType="Long">
        delete from tl_repair_order where r_id = #{rId}
    </delete>

    <delete id="deleteRepairOrderByRIds" parameterType="String">
        delete from tl_repair_order where r_id in 
        <foreach item="rId" collection="array" open="(" separator="," close=")">
            #{rId}
        </foreach>
    </delete>
</mapper>