<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysGroupMapper">
    
    <resultMap type="SysGroup" id="SysGroupResult">
        <result property="groupId"    column="group_id"    />
        <result property="groupName"    column="group_name"    />
        <result property="groupPoints"    column="group_points"    />
        <result property="groupNumber"    column="group_number"    />
        <result property="groupTime"    column="group_time"    />
        <result property="groupCost"    column="group_cost"    />
    </resultMap>

    <sql id="selectSysGroupVo">
        select group_id, group_name, group_points, group_number, group_time, group_cost from sys_group
    </sql>

    <select id="selectSysGroupList" parameterType="SysGroup" resultMap="SysGroupResult">
        <include refid="selectSysGroupVo"/>
        <where>  
            <if test="groupName != null "> and group_name like concat('%', #{groupName}, '%')</if>
        </where>
    </select>
    
    <select id="selectSysGroupByGroupId" parameterType="Long" resultMap="SysGroupResult">
        <include refid="selectSysGroupVo"/>
        where group_id = #{groupId}
    </select>
        
    <insert id="insertSysGroup" parameterType="SysGroup" useGeneratedKeys="true" keyProperty="groupId">
        insert into sys_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="groupName != null">group_name,</if>
            <if test="groupPoints != null">group_points,</if>
            <if test="groupNumber != null">group_number,</if>
            <if test="groupTime != null">group_time,</if>
            <if test="groupCost != null">group_cost,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="groupName != null">#{groupName},</if>
            <if test="groupPoints != null">#{groupPoints},</if>
            <if test="groupNumber != null">#{groupNumber},</if>
            <if test="groupTime != null">#{groupTime},</if>
            <if test="groupCost != null">#{groupCost},</if>
         </trim>
    </insert>

    <update id="updateSysGroup" parameterType="SysGroup">
        update sys_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="groupName != null">group_name = #{groupName},</if>
            <if test="groupPoints != null">group_points = #{groupPoints},</if>
            <if test="groupNumber != null">group_number = #{groupNumber},</if>
            <if test="groupTime != null">group_time = #{groupTime},</if>
            <if test="groupCost != null">group_cost = #{groupCost},</if>
        </trim>
        where group_id = #{groupId}
    </update>

    <delete id="deleteSysGroupByGroupId" parameterType="Long">
        delete from sys_group where group_id = #{groupId}
    </delete>

    <delete id="deleteSysGroupByGroupIds" parameterType="String">
        delete from sys_group where group_id in 
        <foreach item="groupId" collection="array" open="(" separator="," close=")">
            #{groupId}
        </foreach>
    </delete>
</mapper>