<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysStudentInfoMapper">
    
    <resultMap type="SysStudentInfo" id="SysStudentInfoResult">
        <result property="studentInfoId"    column="student_info_id"    />
        <result property="majorName"    column="major_name"    />
        <result property="groupId"    column="group_id"    />
        <result property="studentPoints"    column="student_points"    />
        <result property="cost"    column="cost"    />
        <result property="userName"    column="user_name"    />
        <result property="time"    column="time"    />
    </resultMap>

    <sql id="selectSysStudentInfoVo">
        select student_info_id, major_name, group_id, student_points, cost, user_name, time from sys_student_info
    </sql>

    <select id="selectSysStudentInfoList" parameterType="SysStudentInfo" resultMap="SysStudentInfoResult">
        <include refid="selectSysStudentInfoVo"/>
        <where>  
            <if test="majorName != null  and majorName != ''"> and major_name like concat('%', #{majorName}, '%')</if>
            <if test="groupId != null "> and group_id = #{groupId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
        </where>
    </select>
    
    <select id="selectSysStudentInfoByStudentInfoId" parameterType="Long" resultMap="SysStudentInfoResult">
        <include refid="selectSysStudentInfoVo"/>
        where student_info_id = #{studentInfoId}
    </select>
        
    <insert id="insertSysStudentInfo" parameterType="SysStudentInfo" useGeneratedKeys="true" keyProperty="studentInfoId">
        insert into sys_student_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="majorName != null">major_name,</if>
            <if test="groupId != null">group_id,</if>
            <if test="studentPoints != null">student_points,</if>
            <if test="cost != null">cost,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="time != null">time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="majorName != null">#{majorName},</if>
            <if test="groupId != null">#{groupId},</if>
            <if test="studentPoints != null">#{studentPoints},</if>
            <if test="cost != null">#{cost},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="time != null">#{time},</if>
         </trim>
    </insert>

    <update id="updateSysStudentInfo" parameterType="SysStudentInfo">
        update sys_student_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="majorName != null">major_name = #{majorName},</if>
            <if test="groupId != null">group_id = #{groupId},</if>
            <if test="studentPoints != null">student_points = #{studentPoints},</if>
            <if test="cost != null">cost = #{cost},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="time != null">time = #{time},</if>
        </trim>
        where student_info_id = #{studentInfoId}
    </update>

    <delete id="deleteSysStudentInfoByStudentInfoId" parameterType="Long">
        delete from sys_student_info where student_info_id = #{studentInfoId}
    </delete>

    <delete id="deleteSysStudentInfoByStudentInfoIds" parameterType="String">
        delete from sys_student_info where student_info_id in 
        <foreach item="studentInfoId" collection="array" open="(" separator="," close=")">
            #{studentInfoId}
        </foreach>
    </delete>
</mapper>